{"version":3,"sources":["components/search-box/search-box.component.jsx","components/card/cad.component.jsx","components/card-list/card-list.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["SearchBox","_ref","className","placeholder","onChangeHandler","react_default","a","createElement","type","concat","onChange","Card","monster","id","name","email","key","src","alt","CardList","monsters","map","cad_component","App","_useState","useState","_useState2","Object","slicedToArray","searchField","setSearchFiled","_useState3","_useState4","setMonsters","_useState5","_useState6","filteredMonsters","setFilteredMonsters","useEffect","fetch","then","response","json","users","newFilteredMonsters","filter","toLowerCase","includes","search_box_component","event","searchFieldString","target","value","card_list_component","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","bind","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode","src_App_0"],"mappings":"uRAgBeA,SAZG,SAAAC,GAA+C,IAA7CC,EAA6CD,EAA7CC,UAAWC,EAAkCF,EAAlCE,YAAaC,EAAqBH,EAArBG,gBACxC,OACIC,EAAAC,EAAAC,cAAA,WACIF,EAAAC,EAAAC,cAAA,SACAC,KAAK,SACLN,UAAS,gBAAAO,OAAkBP,GAC3BC,YAAaA,EACbO,SAAUN,OCKPO,SAZF,SAAAV,GAAe,IAAbW,EAAaX,EAAbW,QACHC,EAAoBD,EAApBC,GAAIC,EAAgBF,EAAhBE,KAAMC,EAAUH,EAAVG,MAElB,OACIV,EAAAC,EAAAC,cAAA,OAAKL,UAAU,iBAAiBc,IAAKH,GACjCR,EAAAC,EAAAC,cAAA,OAAKU,IAAG,wBAAAR,OAA0BI,EAA1B,0BAAsDK,IAAG,WAAAT,OAAaK,KAC9ET,EAAAC,EAAAC,cAAA,UAAKO,GACLT,EAAAC,EAAAC,cAAA,SAAIQ,MCODI,SAdE,SAAAlB,GAAkB,IAAfmB,EAAenB,EAAfmB,SAChB,OACIf,EAAAC,EAAAC,cAAA,OAAKL,UAAU,aAEPkB,EAASC,IAAI,SAACT,GACV,OACIP,EAAAC,EAAAC,cAACe,EAAD,CAAMN,IAAKJ,EAAQC,GAAID,QAASA,SCiCzCW,SArCH,WAAM,IAAAC,EACsBC,mBAAS,IAD/BC,EAAAC,OAAAC,EAAA,EAAAD,CAAAH,EAAA,GACTK,EADSH,EAAA,GACII,EADJJ,EAAA,GAAAK,EAEgBN,mBAAS,IAFzBO,EAAAL,OAAAC,EAAA,EAAAD,CAAAI,EAAA,GAETX,EAFSY,EAAA,GAECC,EAFDD,EAAA,GAAAE,EAGgCT,mBAASL,GAHzCe,EAAAR,OAAAC,EAAA,EAAAD,CAAAO,EAAA,GAGTE,EAHSD,EAAA,GAGSE,EAHTF,EAAA,GAKhBG,oBAAU,WACRC,MAAM,8CACHC,KAAK,SAACC,GAAD,OAAaA,EAASC,SAC3BF,KAAK,SAACG,GAAD,OAAWV,EAAYU,MAC9B,IAEHL,oBAAU,WACR,IAAMM,EAAsBxB,EAASyB,OAAO,SAACjC,GAC3C,OAAOA,EAAQE,KAAKgC,cAAcC,SAASlB,KAG7CQ,EAAoBO,IACnB,CAACxB,EAAUS,IAOd,OACExB,EAAAC,EAAAC,cAAA,OAAKL,UAAU,OACbG,EAAAC,EAAAC,cAAA,MAAIL,UAAU,aAAd,mBACAG,EAAAC,EAAAC,cAACyC,EAAD,CACE5C,gBATiB,SAAC6C,GACtB,IAAMC,EAAoBD,EAAME,OAAOC,MAAMN,cAC7ChB,EAAeoB,IAQXhD,UAAU,aACVC,YAAY,oBAEdE,EAAAC,EAAAC,cAAC8C,EAAD,CAAUjC,SAAUgB,OC1BXkB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxCC,EAAAC,EAAA,GAAAlB,KAAAiB,EAAAE,KAAA,UAAqBnB,KAAK,SAAAvC,GAAiD,IAA9C2D,EAA8C3D,EAA9C2D,OAAQC,EAAsC5D,EAAtC4D,OAAQC,EAA8B7D,EAA9B6D,OAAQC,EAAsB9D,EAAtB8D,OAAQC,EAAc/D,EAAd+D,QAC3DJ,EAAOL,GACPM,EAAON,GACPO,EAAOP,GACPQ,EAAOR,GACPS,EAAQT,MCDDU,IAASC,WAAWC,SAASC,eAAe,SACpDC,OACHhE,EAAAC,EAAAC,cAACF,EAAAC,EAAMgE,WAAP,KACEjE,EAAAC,EAAAC,cAACgE,EAAD,QAOJjB","file":"static/js/main.13f062cc.chunk.js","sourcesContent":["import React from \"react\";\n\nimport './search-box.styles.css';\n\nconst SearchBox = ({className, placeholder, onChangeHandler}) => {\n    return(\n        <div>\n            <input\n            type=\"search\"\n            className={`search-input ${className}`}\n            placeholder={placeholder}\n            onChange={onChangeHandler} />\n        </div>\n    )\n}\n\nexport default SearchBox;\n","import React from \"react\";\n\nimport './card.styles.css';\n\nconst Card = ({monster}) => {\n    const { id, name, email } = monster;\n\n    return(\n        <div className=\"card-container\" key={id}>\n            <img src={`https://robohash.org/${id}?set=set2&size=180x180`} alt={`Monster ${name}`} />\n            <h2>{name}</h2>\n            <p>{email}</p>\n        </div>\n    )\n}\n\nexport default Card;\n","import React from \"react\";\nimport Card from \"../card/cad.component\";\nimport './card-list.styles.css';\n\nconst CardList = ({ monsters }) => {\n    return (\n        <div className=\"card-list\">\n            {\n                monsters.map((monster) => {\n                    return (\n                        <Card key={monster.id} monster={monster} />\n                    )\n                })\n            }\n        </div>\n    )\n}\n\nexport default CardList;\n","import React, { useState, useEffect } from 'react';\n\nimport SearchBox from './components/search-box/search-box.component';\nimport CardList from './components/card-list/card-list.component';\nimport './App.css';\n\nconst App = () => {\n  const [searchField, setSearchFiled] = useState(''); // [value, setvalue]\n  const [monsters, setMonsters] = useState([]);\n  const [filteredMonsters, setFilteredMonsters] = useState(monsters);\n\n  useEffect(()=>{\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then((response)=> response.json())\n      .then((users) => setMonsters(users))\n  }, []);\n\n  useEffect(()=>{\n    const newFilteredMonsters = monsters.filter((monster)=>{\n      return monster.name.toLowerCase().includes(searchField);\n    });\n\n    setFilteredMonsters(newFilteredMonsters);\n  }, [monsters, searchField]);\n\n  const onSearchChange = (event)=>{\n    const searchFieldString = event.target.value.toLowerCase();\n    setSearchFiled(searchFieldString);\n  }\n\n  return(\n    <div className=\"app\">\n      <h1 className=\"app-title\">Monster Rolodex</h1>\n      <SearchBox \n        onChangeHandler={onSearchChange} \n        className=\"search-box\" \n        placeholder=\"Search Monsters\"\n      />\n      <CardList monsters={filteredMonsters} />\n    </div>\n  )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}